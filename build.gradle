plugins {
    id "dev.architectury.loom" version "1.10-SNAPSHOT"
    id "maven-publish"
}

base {
    archivesName = project.mod_group_id
}

version = project.mod_version

java {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
}

loom {
    silentMojangMappingsLicense()
    forge {
        mixinConfigs = [
                "adjtweaks.mixins.json"
        ]
    }
}

repositories {
    maven {
        // Shadows_of_Fire's Maven
        url "https://maven.shadowsoffire.dev/releases"
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}


dependencies {
    minecraft "net.minecraft:minecraft:$project.minecraft_version"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchment_version}@zip")
    }
    forge "net.minecraftforge:forge:$project.forge_version"
    implementation 'com.google.code.gson:gson:2.8.9'
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1"))
    implementation(include("io.github.llamalad7:mixinextras-forge:0.4.1"))
    modImplementation "dev.shadowsoffire:Placebo:${project.minecraft_version}-${project.placebo_version}"
    modImplementation "dev.shadowsoffire:ApothicAttributes:${project.minecraft_version}-${project.attributeslib_version}"
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def replaceProperties = [
        minecraft_version    : minecraft_version, minecraft_version_range: minecraft_version_range,
        forge_version        : forge_version, forge_version_range: forge_version_range,
        loader_version_range : loader_version_range,
        mod_id               : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
        mod_authors          : mod_authors, mod_description: mod_description,
        attributeslib_version: attributeslib_version
]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 17
}

java {
    withSourcesJar()
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_authors,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {

    }
}
